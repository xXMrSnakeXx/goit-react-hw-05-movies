{"version":3,"file":"static/js/562.cace11d0.chunk.js","mappings":"sNAwBA,UAlBiB,WACf,OAA4BA,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,MAAK,SAAAC,GAAO,OAAIN,GAAU,OAAIM,OAC9BC,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAMO,cAChC,KAED,iCACE,6CACET,IAAU,SAAC,IAAD,IACXA,IAAU,SAAC,IAAD,CAAWA,OAAQA,IAC7BE,IAAS,2D,sFCnBhB,EAAuB,4BAAvB,EAA0D,4BAA1D,EAAkG,iCAAlG,EAA6I,+BAA7I,EAAoL,6B,SC2CpL,EAtCsB,SAAC,GAAe,IAAbQ,EAAY,EAAZA,MACfC,EAAiCD,EAAjCC,YAAaC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,MAAOC,EAAOJ,EAAPI,GAC5BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,KAAD,CACEC,GAAE,kBAAaH,GACfI,UAAWC,EACXC,MAAO,CACLC,KAAMN,EAASO,SAAWP,EAASQ,QAJvC,UAOE,iBAAKL,UAAWC,EAAhB,WACE,wBACGR,GACC,gBACEa,IAAG,0CAAqCb,GACxCc,IAAKZ,EACLK,UAAWC,KAGb,gBAAKK,IAAKE,EAAUD,IAAKZ,EAAOK,UAAWC,OAG/C,gBAAKD,UAAWC,EAAhB,UACE,cAAGD,UAAWC,EAAd,gBAAwBN,QAAxB,IAAwBA,EAAAA,EAASD,YC7B3C,EAAuB,wBCuBvB,EAnBkB,SAAC,GAAgB,IAAdZ,EAAa,EAAbA,OACnB,OACE,eAAIkB,UAAWC,EAAf,SACGnB,EAAO2B,KAAI,SAAAjB,GAAK,OACf,SAAC,EAAD,CAA8BA,MAAOA,GAAjBA,EAAMI,W,0MCPlCc,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHxB,EAAW,mCAAG,oGACFuB,IAAAA,IAAA,qCAAwCC,IADtC,cACnBC,EADmB,yBAElBA,EAASC,KAAKxB,SAFI,2CAAH,qDAIXyB,EAAY,mCAAG,WAAMC,GAAN,uFACHL,IAAAA,IAAA,gCACIC,EADJ,wCAC2CI,EAD3C,wBADG,cACpBH,EADoB,yBAInBA,EAASC,KAAKxB,SAJK,2CAAH,sDAMZ2B,EAAY,mCAAG,WAAMC,GAAN,uFACHP,IAAAA,IAAA,iBACXO,EADW,oBACQN,EADR,oBADG,cACpBC,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAMZK,EAAS,mCAAG,WAAMD,GAAN,uFACAP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,EADhB,oBADA,cACjBC,EADiB,yBAIhBA,EAASC,KAAKM,MAJE,2CAAH,sDAMTC,EAAY,mCAAG,WAAMH,GAAN,uFACHP,IAAAA,IAAA,iBACXO,EADW,4BACgBN,EADhB,2BADG,cACpBC,EADoB,yBAInBA,EAASC,KAAKxB,SAJK,2CAAH,uD","sources":["Pages/HomePage.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieListItem/MovieListItem.module.css?83b7","components/MovieListItem/MovieListItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { getTrending } from 'services/api';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    getTrending()\n      .then(results => setMovies([...results]))\n      .catch(error => setError(error.message));\n  }, []);\n  return (\n    <>\n      <h2>Trending movies</h2>\n      {!movies && <Loader />}\n      {movies && <MovieList movies={movies} />}\n      {error && <p>Oops, something went wrong</p>}\n    </>\n  );\n};\nexport default HomePage;\n","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieListItem_link__LGsEq\",\"item\":\"MovieListItem_item__mMQpx\",\"itemImage\":\"MovieListItem_itemImage__fOtLI\",\"wrapper\":\"MovieListItem_wrapper__M9KWI\",\"title\":\"MovieListItem_title__Q3l1Y\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport notFound from 'images/notFound.png';\nimport s from './MovieListItem.module.css';\n\nconst MovieListItem = ({ movie }) => {\n  const { poster_path, name, title, id } = movie;\n  const location = useLocation();\n  return (\n    <Link\n      to={`/movies/${id}`}\n      className={s.link}\n      state={{\n        from: location.pathname + location.search,\n      }}\n    >\n      <div className={s.item}>\n        <li>\n          {poster_path ? (\n            <img\n              src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n              alt={title}\n              className={s.itemImage}\n            />\n          ) : (\n            <img src={notFound} alt={title} className={s.itemImage} />\n          )}\n        </li>\n        <div className={s.wrapper}>\n          <p className={s.title}>{title ?? name}</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number,\n    poster_path: PropTypes.string,\n    name: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n};\nexport default MovieListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\"};","import PropTypes from 'prop-types';\n\nimport MovieListItem from 'components/MovieListItem/MovieListItem';\nimport s from './MovieList.module.css';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <ul className={s.list}>\n      {movies.map(movie => (\n        <MovieListItem key={movie.id} movie={movie} />\n      ))}\n    </ul>\n  );\n};\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      name: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f8a2c74c619ae47b0575baa7c8b50025';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return response.data.results;\n};\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\nexport const movieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const movieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\nexport const movieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["useState","movies","setMovies","error","setError","useEffect","getTrending","then","results","catch","message","movie","poster_path","name","title","id","location","useLocation","to","className","s","state","from","pathname","search","src","alt","notFound","map","axios","API_KEY","response","data","searchMovies","query","movieDetails","movieId","movieCast","cast","movieReviews"],"sourceRoot":""}