{"version":3,"file":"static/js/844.f71ba9af.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","page/MovieDetailsPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__PGjyO\",\"wrapper\":\"MovieDetails_wrapper__cJixg\",\"img\":\"MovieDetails_img__D3WH9\",\"info\":\"MovieDetails_info__0TKY1\",\"additionalInfo\":\"MovieDetails_additionalInfo__qmwMY\",\"text\":\"MovieDetails_text__uG5Tv\",\"link\":\"MovieDetails_link__wf74g\"};","import { useLocation, NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport notFound from 'images/notFound.png';\nimport s from './MovieDetails.module.css';\n\nconst MovieDetails = ({ movie }) => {\n  const {\n    original_title,\n    genres,\n    overview,\n    poster_path,\n    release_date,\n    vote_average,\n  } = movie;\n\n  const genresAll = genres.map(genre => genre.name).join(', ');\n  const location = useLocation();\n  return (\n    <>\n      <div className={s.wrapper}>\n        <img\n          className={s.img}\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n              : notFound\n          }\n          alt={original_title}\n        />\n        <div className={s.info}>\n          <h1>\n            {original_title} ({release_date})\n          </h1>\n          <p>User Score: {vote_average}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genresAll}</p>\n        </div>\n      </div>\n      <div className={s.additionalInfo}>\n        <p className={s.text}>Additional information</p>\n        <NavLink to=\"cast\" className={s.link} state={location.state}>\n          Cast\n        </NavLink>\n        <NavLink to=\"reviews\" className={s.link} state={location.state}>\n          Reviews\n        </NavLink>\n      </div>\n    </>\n  );\n};\nMovieDetails.propTypes = {\n  movie: PropTypes.shape({\n    original_title: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ).isRequired,\n    overview: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\nexport default MovieDetails;\n","import { useState, useEffect, lazy } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  useLocation,\n  Routes,\n  Route,\n} from 'react-router-dom';\n\nimport { movieDetails } from 'services/api';\nimport Loader from 'components/Loader/Loader';\nimport MovieDetails from 'components/MovieDetails/MovieDetails';\nimport s from '../components/MovieDetails/MovieDetails.module.css';\n\nconst CastPage = lazy(() => import('./CastPage'));\nconst ReviewsPage = lazy(() => import('./ReviewsPage'));\n\nconst MovieDetailsPage = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    movieDetails(movieId)\n      .then(results => setMovie(results))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const onGoBack = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n  return (\n    <>\n      <button type=\"button\" className={s.button} onClick={onGoBack}>\n        Go back\n      </button>\n      {!movie && <Loader />}\n      {movie && <MovieDetails movie={movie} />}\n      {error && <p>Oops, something went wrong</p>}\n      <Routes>\n        <Route path=\"cast\" element={<CastPage />} />\n        <Route path=\"reviews\" element={<ReviewsPage />} />\n      </Routes>\n    </>\n  );\n};\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f8a2c74c619ae47b0575baa7c8b50025';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return response.data.results;\n};\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\nexport const movieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const movieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\nexport const movieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["movie","original_title","genres","overview","poster_path","release_date","vote_average","genresAll","map","genre","name","join","location","useLocation","className","s","src","notFound","alt","to","state","CastPage","lazy","ReviewsPage","movieId","useParams","useState","setMovie","error","setError","useEffect","movieDetails","then","results","catch","message","navigate","useNavigate","type","onClick","from","Loader","path","element","axios","API_KEY","getTrending","response","data","searchMovies","query","movieCast","cast","movieReviews"],"sourceRoot":""}