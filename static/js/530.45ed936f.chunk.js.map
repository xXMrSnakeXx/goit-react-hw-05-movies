{"version":3,"file":"static/js/530.45ed936f.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieListItem/MovieListItem.module.css?83b7","components/MovieListItem/MovieListItem.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","routes/MoviePage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"link\":\"MovieListItem_link__LGsEq\",\"item\":\"MovieListItem_item__mMQpx\",\"itemImage\":\"MovieListItem_itemImage__fOtLI\",\"wrapper\":\"MovieListItem_wrapper__M9KWI\",\"title\":\"MovieListItem_title__Q3l1Y\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport notFound from 'images/notFound.png';\nimport s from './MovieListItem.module.css';\n\nconst MovieListItem = ({ movie }) => {\n  const { poster_path, name, title, id } = movie;\n  const location = useLocation();\n  return (\n    <Link\n      to={`/movies/${id}`}\n      className={s.link}\n      state={{\n        from: location.pathname + location.search,\n      }}\n    >\n      <div className={s.item}>\n        <li>\n          <img\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w300/${poster_path}`\n                : notFound\n            }\n            alt={title}\n            className={s.itemImage}\n          />\n        </li>\n        <div className={s.wrapper}>\n          <p className={s.title}>{title ?? name}</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\nMovieListItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    name: PropTypes.string,\n    title: PropTypes.string,\n  }).isRequired,\n};\nexport default MovieListItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__yjDCC\"};","import PropTypes from 'prop-types';\n\nimport MovieListItem from 'components/MovieListItem/MovieListItem';\nimport s from './MovieList.module.css';\n\nconst MovieList = ({ movies }) => {\n  return (\n    <ul className={s.list}>\n      {movies.map(movie => (\n        <MovieListItem key={movie.id} movie={movie} />\n      ))}\n    </ul>\n  );\n};\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\nexport default MovieList;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { FcSearch } from 'react-icons/fc';\nimport { toast } from 'react-toastify';\n\nimport { searchMovies } from 'services/api';\nimport Loader from 'components/Loader/Loader';\nimport MovieList from '../components/MovieList/MovieList';\nimport s from '../components/AppBar/AppBar.module.css';\n\nconst MoviePage = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = e => {\n    setSearchQuery(e.currentTarget.value);\n  };\n  const onFormSubmit = e => {\n    e.preventDefault();\n\n    const newQuery = e.target.elements.query.value.toLowerCase();\n    if (newQuery.trim() === '') {\n      toast.error(\"Please, enter correct movie's name\");\n      return;\n    }\n    setSearchParams({ query: newQuery });\n  };\n\n  useEffect(() => {\n    if (searchParams.get('query') !== null) {\n      const newQuery = searchParams.get('query');\n      setLoading(true);\n      searchMovies(newQuery)\n        .then(results => {\n          results.length !== 0\n            ? setMovies([...results])\n            : toast.error(\n                \"Sorry, we didn't find any movies matching your search. Please, try again\"\n              );\n        })\n        .catch(error => setError(error.message))\n        .finally(() => setLoading(false));\n      setSearchQuery(searchParams.get('query'));\n    }\n  }, [searchParams]);\n  return (\n    <>\n      <form className={s.form} onSubmit={onFormSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          value={searchQuery}\n          onChange={handleChange}\n          className={s.input}\n          autoFocus={true}\n        />\n        <button type=\"submit\" className={s.button}>\n          <FcSearch className={s.icon} />\n        </button>\n      </form>\n      {loading && <Loader />}\n      {movies && <MovieList movies={movies} />}\n      {error && <p>Oops, something went wrong</p>}\n    </>\n  );\n};\nexport default MoviePage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f8a2c74c619ae47b0575baa7c8b50025';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return response.data.results;\n};\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\nexport const movieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const movieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\nexport const movieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["movie","poster_path","name","title","id","location","useLocation","to","className","s","state","from","pathname","search","src","notFound","alt","movies","map","useState","searchQuery","setSearchQuery","setMovies","error","setError","loading","setLoading","useSearchParams","searchParams","setSearchParams","useEffect","get","newQuery","searchMovies","then","results","length","toast","catch","message","finally","onSubmit","e","preventDefault","target","elements","query","value","toLowerCase","trim","type","onChange","currentTarget","autoFocus","axios","API_KEY","getTrending","response","data","movieDetails","movieId","movieCast","cast","movieReviews"],"sourceRoot":""}