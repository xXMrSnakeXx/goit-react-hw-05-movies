{"version":3,"file":"static/js/986.8b5afb70.chunk.js","mappings":"wOACA,EAAuB,sB,SC4BvB,EAzBgB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACjB,OACE,+BACE,eAAIC,UAAWC,EAAf,SACGF,EAAQG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,WAAYC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,OAA5B,OACX,2BACE,wBAAKA,KACL,0BAAOF,KACP,uBAAIC,MAHGF,WCiBnB,EAnBoB,WAClB,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOV,EAAP,KAAgBW,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaP,GACVQ,MAAK,SAAAC,GAAO,OAAIN,EAAWM,MAC3BC,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAMO,cAChC,CAACX,KAGF,iCACIR,IAAW,SAACoB,EAAA,EAAD,IACZpB,IAAW,SAAC,EAAD,CAASA,QAASA,IAC7BY,IAAS,2D,0MCpBhBS,IAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEHC,EAAW,mCAAG,oGACFF,IAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASC,KAAKR,SAFI,2CAAH,qDAIXS,EAAY,mCAAG,WAAMC,GAAN,uFACHN,IAAAA,IAAA,gCACIC,EADJ,wCAC2CK,EAD3C,wBADG,cACpBH,EADoB,yBAInBA,EAASC,KAAKR,SAJK,2CAAH,sDAMZW,EAAY,mCAAG,WAAMpB,GAAN,uFACHa,IAAAA,IAAA,iBACXb,EADW,oBACQc,EADR,oBADG,cACpBE,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAMZI,EAAS,mCAAG,WAAMrB,GAAN,uFACAa,IAAAA,IAAA,iBACXb,EADW,4BACgBc,EADhB,oBADA,cACjBE,EADiB,yBAIhBA,EAASC,KAAKK,MAJE,2CAAH,sDAMTf,EAAY,mCAAG,WAAMP,GAAN,uFACHa,IAAAA,IAAA,iBACXb,EADW,4BACgBc,EADhB,2BADG,cACpBE,EADoB,yBAInBA,EAASC,KAAKR,SAJK,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Rewievs.module.css?10d4","components/Reviews/Reviews.jsx","Pages/ReviewsPage.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Rewievs_list__UtseN\"};","import PropTypes from 'prop-types';\n\nimport s from './Rewievs.module.css';\n\nconst Reviews = ({ reviews }) => {\n  return (\n    <>\n      <ul className={s.list}>\n        {reviews.map(({ id, created_at, content, author }) => (\n          <li key={id}>\n            <h2>{author}</h2>\n            <span>{created_at}</span>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      created_at: PropTypes.string,\n      content: PropTypes.string,\n      author: PropTypes.string,\n    })\n  ).isRequired,\n};\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { movieReviews } from 'services/api';\nimport Loader from 'components/Loader/Loader';\nimport Reviews from 'components/Reviews/Reviews';\n\nconst ReviewsPage = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    movieReviews(movieId)\n      .then(results => setReviews(results))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <>\n      {!reviews && <Loader />}\n      {reviews && <Reviews reviews={reviews} />}\n      {error && <p>Oops, something went wrong</p>}\n    </>\n  );\n};\nexport default ReviewsPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'f8a2c74c619ae47b0575baa7c8b50025';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/all/week?api_key=${API_KEY}`);\n  return response.data.results;\n};\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}&include_adult=true`\n  );\n  return response.data.results;\n};\nexport const movieDetails = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\nexport const movieCast = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\nexport const movieReviews = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["reviews","className","s","map","id","created_at","content","author","movieId","useParams","useState","setReviews","error","setError","useEffect","movieReviews","then","results","catch","message","Loader","axios","API_KEY","getTrending","response","data","searchMovies","query","movieDetails","movieCast","cast"],"sourceRoot":""}