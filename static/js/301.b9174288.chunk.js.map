{"version":3,"file":"static/js/301.b9174288.chunk.js","mappings":"mPACA,EAAuB,mB,SCoCvB,EAhCa,SAAC,GAAc,IAAZA,EAAW,EAAXA,KACd,OACE,+BACE,eAAIC,UAAWC,EAAf,SACGF,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,aAAtB,OACR,2BACE,gBACEC,IACED,EAAY,0CAC2BA,GACnCE,EAENC,MAAO,IACPC,OAAQ,IACRC,IAAKN,KAEP,uBAAIA,MAXGD,WCgBnB,EAnBiB,WACf,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOd,EAAP,KAAae,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAUP,GACPQ,MAAK,SAAAC,GAAO,OAAIN,EAAQM,MACxBC,OAAM,SAAAN,GAAK,OAAIC,EAASD,EAAMO,cAChC,CAACX,KAGF,iCACIZ,IAAQ,SAACwB,EAAA,EAAD,IACTxB,IAAQ,SAAC,EAAD,CAAMA,KAAMA,IACpBgB,IAAS","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","page/CastPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\"};","import PropTypes from 'prop-types';\n\nimport notFound from 'images/notFound.png';\nimport s from './Cast.module.css';\n\nconst Cast = ({ cast }) => {\n  return (\n    <>\n      <ul className={s.list}>\n        {cast.map(({ id, original_name, profile_path }) => (\n          <li key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w300/${profile_path}`\n                  : notFound\n              }\n              width={300}\n              height={450}\n              alt={original_name}\n            />\n            <p>{original_name}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      original_name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    }).isRequired\n  ),\n};\nexport default Cast;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { movieCast } from 'services/api';\nimport Loader from 'components/Loader/Loader';\nimport Cast from 'components/Cast/Cast';\n\nconst CastPage = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    movieCast(movieId)\n      .then(results => setCast(results))\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <>\n      {!cast && <Loader />}\n      {cast && <Cast cast={cast} />}\n      {error && <p>Oops, something went wrong</p>}\n    </>\n  );\n};\nexport default CastPage;\n"],"names":["cast","className","s","map","id","original_name","profile_path","src","notFound","width","height","alt","movieId","useParams","useState","setCast","error","setError","useEffect","movieCast","then","results","catch","message","Loader"],"sourceRoot":""}